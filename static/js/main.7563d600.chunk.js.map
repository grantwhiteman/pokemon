{"version":3,"sources":["components/card.js","components/pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["Card","input","substring","toUpperCase","style","className","this","props","type","id","capitalise","name","alt","src","abilities","map","obj","index","ability","React","Component","Pokemon","event","setState","target","value","toLowerCase","console","log","state","getPokemon","fetch","then","response","json","data","forms","types","error","catch","getRandomPokemon","randomID","Math","floor","random","alert","getEvolution","includes","onChange","placeholder","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7563d600.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default class Card extends React.Component {\n    capitalise (input) {\n        return input.substring(0, 1).toUpperCase() + input.substring(1)\n    }\n\n    render() {\n        return (\n            <div style={{\"height\":\"320px\"}}className={this.props.type} id=\"Card\">\n                <h1>{this.capitalise(this.props.name)}</h1>\n                <div>\n                    <span>{this.capitalise(this.props.type)} type\n                    <span id=\"ID\">  ID : {this.props.id}</span></span>\n                </div>                \n                <img alt={this.props.name} className=\"image\" src={`https://pokeres.bastionbot.org/images/pokemon/${this.props.id}.png`} />\n                <hr className=\"solid\"></hr>\n                <h3 id=\"abilities\">Abilities</h3>\n                <ol>{this.props.abilities.map((obj, index) => <li className=\"ability\" key={index}>{this.capitalise(obj.ability.name)}</li>)}</ol>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport Card from './card'\n\n export default class Pokemon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: 'pikachu',\n            input: '',\n            id: 25,\n            abilities: [{ability: { name: \"static\" } }, { ability:{name:\"lightening-rod\"}}],\n            type: 'electric',\n            error: null\n        }\n    }\n\n    input = (event) => {\n        this.setState( { input: event.target.value.toLowerCase() } )\n        console.log(this.state.input)\n    }\n\n    getPokemon = () => {\n        fetch(`https://pokeapi.co/api/v2/pokemon/${this.state.input}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    name: data.forms[0].name,\n                    id: data.id,\n                    abilities: data.abilities,\n                    type: data.types[0].type.name,\n                    error: null\n                })\n            })\n            .catch((error) => {\n                this.setState({ error: \"Oh, we making up pokemon now? Try again\" })\n                console.error('Error:', error);\n            })\n        }\n\n    getRandomPokemon = () => {\n        const randomID = Math.floor(Math.random() * 151 + 1)\n        fetch(`https://pokeapi.co/api/v2/pokemon/${randomID}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ name: data.forms[0].name,\n                id: data.id, \n                abilities: data.abilities, \n                type: data.types[0].type.name,\n                error: null\n                })\n            })\n            .catch((error) => {\n                alert(\"No idea what happened here, this isn't supposed to happen\")\n                console.error('Error:', error);\n            })\n    }\n\n    getEvolution = () => {\n        const arr=[3,6,9,12,15,18,20,22,24,26,28,31,34,36,38,40,42,45,47,49,51,53,55,57,59,62,65,68,71,73,76,78,80,82,85,87,89,91,94,95,97,99,102,103,105,107,108,110,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,131,136,137,139,141,142,143,144,145,146,149,150,151]\n        if (!arr.includes(this.state.id)) {\n            fetch(`https://pokeapi.co/api/v2/pokemon/${this.state.id + 1}`)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({\n                        name: data.forms[0].name,\n                        id: data.id,\n                        abilities: data.abilities,\n                        type: data.types[0].type.name,\n                        error: null\n                    })\n                })\n                .catch((error) => {\n                    alert(\"Oops, something went wrong!\")\n                    console.error('Error:', error);\n                })\n        } else this.setState({error: `Evolve a ${this.state.name}? Into what exactly?`})\n    }\n\n     render() {\n        return (\n            <div>\n                <h1>Who's that pokemon?!</h1>\n                <input type=\"text\" onChange={this.input} placeholder=\"e.g. pikachu\" />\n                <button type=\"sumbit\" onClick={this.getPokemon}>Show me!</button>\n                <button type=\"sumbit\" onClick={this.getRandomPokemon}>Random</button>\n                <br></br>\n                <br></br>\n                <h2>{this.state.error}</h2>\n                <Card name={this.state.name} id={this.state.id} abilities={this.state.abilities} type={this.state.type}/>\n                <button type=\"sumbit\" onClick={this.getEvolution}>Evolve!</button>\n                <h4>Rules:</h4>\n                <ol>\n                    <li>Base set only</li>\n                    <li>Search by name or ID (1 - 151)</li>\n                    <li>Grant is the best</li>\n                </ol>\n            </div>\n            \n        )\n     }\n}","import Pokemon from './components/pokemon'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Pokemon />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}